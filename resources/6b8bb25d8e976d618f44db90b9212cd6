In formal language theory, computer science and linguistics, the Chomsky hierarchy (occasionally referred to as the Chomsky–Schützenberger hierarchy)[1] is a containment hierarchy of classes of formal grammars.

This hierarchy of grammars was described by Noam Chomsky in 1956.[2] It is also named after Marcel-Paul Schützenberger, who played a crucial role in the development of the theory of formal languages.

A formal grammar of this type consists of a finite set of production rules (left-hand side → right-hand side), where each side consists of a finite sequence of the following symbols:
   a finite set of nonterminal symbols (indicating that some production rule can yet be applied)
   a finite set of terminal symbols (indicating that no production rule can be applied)
   a start symbol (a distinguished nonterminal symbol)
A formal grammar provides an axiom schema for (or generates) a formal language, which is a (usually infinite) set of finite-length sequences of symbols that may be constructed by applying production rules to another sequence of symbols (which initially contains just the start symbol). A rule may be applied by replacing an occurrence of the symbols on its left-hand side with those that appear on its right-hand side. A sequence of rule applications is called a derivation. Such a grammar defines the formal language: all words consisting solely of terminal symbols which can be reached by a derivation from the start symbol.

